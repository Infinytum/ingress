name: Docker Image Release

on:
  push:
    branches: ["dev", "main"]
    tags: ["v*"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      TARGET_TAG: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Environment
        run: |
          echo "TARGET_TAG=latest" >> $GITHUB_ENV
        if: github.ref_name == 'main'
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.23.x
          check-latest: true
      - name: Setup Go Caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Build ingress
        run: |
          go mod download
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o bin/linux/amd64/ingress
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o bin/linux/arm64/ingress

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker Metadata
        uses: docker/metadata-action@v4
        id: meta
        with:
          tags: ${{ env.TARGET_TAG }}
          images: docker.io/infinytum/ingress
      - name: Docker Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
